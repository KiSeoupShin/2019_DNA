fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
func1<-print(func<f)
func2<-as.numeric(func1)
print(func2)
}
fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
func1<-print(cummax(func))
}
fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
func1<-print(cummax(func<f))
}
fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
func1<-print(cummax(func<f))
print(func1)
}
fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
cummax(func)
}
fibo(8)
print(k<2)
k<-c(1,2,3,4,5)
print(k<2)
l<-k[c(print(k<2))]
l
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
print(func)
}
func1<-func[c(print(func<=f))]
}
fibo(8)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
}
func1<-func[c(print(func<=f))]
print(func1)
}
fibo(8)
fibo(7)
fibo(4)
fibo(5)
fibo(10)
fibo(50)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(i in 3:f){
func[i]<-func[i-1]+func[i-2]
}
}
func1<-func[c(func<=f)]
print(func1)
}
fibo(50)
fibo(80)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(n in 3:f){
func[n]<-func[n-1]+func[n-2]
}
}
func1<-func[c(func<=f)]
print(func1)
}
fibo(80)
x <- c(1, 5, 3, 2, 6, 1, 1)
most<-function(a){
q<-table(x)
w<-which.max(q) #사용해도 되는건가..?
print(w)
}
most(x)
change(1)
a<-1
b<--6
c<-9
if(a==0){
xa<- -c/b
print(x)
}else{
xa<- b^2-4*a*c
if(xa>0){
x1<- {-b+sqrt(b^2-4*a*c)}/(2*a)
x2<- {-b-sqrt(b^2-4*a*c)}/(2*a)
print(x1)
print(x2)
}else if(xa==0){
x3<- -b/2
print(x3)
}else{
print('실근이 없다')
}
}
x <- c(1, 5, 3, 2, 6, 1, 1)
most<-function(a){
q<-table(x)
w<-which.max(q)
print(w)
}
most(x)
txt<-'사과 톡톡톡 트로피카나, 복숭아 톡톡톡 트로피카나, 포도 톡톡톡 트로피카나, 오렌지 톡톡톡 트로피카나'
change<-function(n){
if(n==1){
sub(pattern='톡톡톡',replacement='toktoktok',x=txt)}
else{
for(i in 1:n){
txt<-sub(pattern='톡톡톡',replacement='toktoktok',x=txt)
}
for(i in 1:(n-1)){
txt<-sub(pattern='toktoktok',replacement='톡톡톡',x=txt)
}
print(txt)
}}
change(3)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(n in 3:f){
func[n]<-func[n-1]+func[n-2]
}
}
func1<-func[c(func<=f)]
print(func1)
}
fibo(80)
MEAN<-function(x,trim=0){
if(trim!=0){
a=length(x)*trim
x<-x[(floor(a)+1):(length(x)-floor(a))]
mean(x)
}
}
p=c(1,10,20,30,40,50)
p<-[(floor(a)+1):(length(x)-floor(a))]
MEAN(p,trim=0.1)
MEAN<-function(x,trim=0){
if(trim!=0){
a=length(x)*trim
x<-x[(floor(a)+1):(length(x)-floor(a))]
mean(x)
}
}
p=c(1,10,20,30,40,50)
p<-p[(floor(a)+1):(length(x)-floor(a))]
MEAN(p,trim=0.1)
x<-c(1,2,3,4,5)
sum(x)/length(x)
MEAN<-function(x,trim=y){
if(trim=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):length(x)-((y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):length(x)-((y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,trim=y){
if(trim=y=0){
sum(x)/length(x)
}else{
z<-x[((trim=y*10)+1):length(x)-((trim=y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,trim=y){
if(trim=y=0){
sum(x)/length(x)
}else{
z<-x[((trim=y*10)+1):length(x)-((trim=y*10)+1)]
sum(z)/length(z)
}
}
x<-c(1,2,3,4,5)
MEAN<-function(x,trim=y){
if(trim=y=0){
sum(x)/length(x)
}else{
z<-x[((trim=y*10)+1):length(x)-((trim=y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,'trim=y'){
if(trim=y=0){
sum(x)/length(x)
}else{
z<-x[(('trim=y'*10)+1):length(x)-(('trim=y'*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,'trim'=y){
if(trim=y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):length(x)-((y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,'trim'=y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):length(x)-((y*10)+1)]
sum(z)/length(z)
}
}
x<-c(1,2,3,4,5)
y<-0.1
MEAN<-function(x,'trim'=y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):length(x)-((y*10)+1)]
sum(z)/length(z)
}
}
MEAN<-function(x,'trim'=y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):(length(x)-((y*10)+1))]
sum(z)/length(z)
}
}
MEAN(c(2,4,6,8,10),trim=0.2)
MEAN<-function(x,'trim'=y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):(length(x)-((y*10)+1))]
sum(z)/length(z)
}
}
MEAN <- function(x, na.rm = FALSE){
if (na.rm == TRUE){
x <- na.omit(x) #NA값을 제거하는 함수
Mean <- sum(x)/length(x)
return(Mean)
} else if(na.rm == FALSE){
if (sum(is.na(x) %in% TRUE)>=1){
print("vector has NA")
} else {
Mean <- sum(x)/length(x)
return(Mean)
}
}
}
MEAN<-function(x,'trim'=y){
if(y=0){
sum(x)/length(x)
}else{
z<-x[((y*10)+1):(length(x)-((y*10)+1))]
sum(z)/length(z)
}
}
MEAN(c(1,2,3,4,5),trim=0.1)
MEAN<-function(x,trim=0){
if(trim!=0){
z<-x[((trim*10)+1):(length(x)-((trim*10)))]
sum(z)/length(z)
}else{
sum(x)/length(x)
}
}
MEAN(c(1,2,3,4,5),trim=0.1)
MEAN(c(1,2,3,4,5),trim=0)
MEAN(c(1,5,7,2,9),trim=0)
MEAN(c(1,5,7,2,9),trim=0.1)
MEAN(c(1,5,7,2,9),trim=0.2)
a<-1
b<--6
c<-9
if(a==0){
xa<- -c/b
print(x)
}else{
xa<- b^2-4*a*c
if(xa>0){
x1<- {-b+sqrt(b^2-4*a*c)}/(2*a)
x2<- {-b-sqrt(b^2-4*a*c)}/(2*a)
print(x1)
print(x2)
}else if(xa==0){
x3<- -b/2
print(x3)
}else{
print('실근이 없다')
}
}
a<-1
b<--5
c<-6
if(a==0){
xa<- -c/b
print(x)
}else{
xa<- b^2-4*a*c
if(xa>0){
x1<- {-b+sqrt(b^2-4*a*c)}/(2*a)
x2<- {-b-sqrt(b^2-4*a*c)}/(2*a)
print(x1)
print(x2)
}else if(xa==0){
x3<- -b/2
print(x3)
}else{
print('실근이 없다')
}
}
a<-1
b<-5
c<-6
if(a==0){
xa<- -c/b
print(x)
}else{
xa<- b^2-4*a*c
if(xa>0){
x1<- {-b+sqrt(b^2-4*a*c)}/(2*a)
x2<- {-b-sqrt(b^2-4*a*c)}/(2*a)
print(x1)
print(x2)
}else if(xa==0){
x3<- -b/2
print(x3)
}else{
print('실근이 없다')
}
}
fo<-function(a,b,c){
if(a==0){
xa<- -c/b
print(x)
}else{
xa<- b^2-4*a*c
if(xa>0){
x1<- {-b+sqrt(b^2-4*a*c)}/(2*a)
x2<- {-b-sqrt(b^2-4*a*c)}/(2*a)
print(x1)
print(x2)
}else if(xa==0){
x3<- -b/2
print(x3)
}else{
print('실근이 없다')
}
}
}
fo(1,2,3)
fo(1,5,6)
x <- c(1, 5, 3, 2, 6, 1, 1)
most<-function(a){
q<-table(x)
w<-which.max(q)
print(w)
}
most(x)
txt<-'사과 톡톡톡 트로피카나, 복숭아 톡톡톡 트로피카나, 포도 톡톡톡 트로피카나, 오렌지 톡톡톡 트로피카나'
change<-function(n){
if(n==1){
sub(pattern='톡톡톡',replacement='toktoktok',x=txt)}
else{
for(i in 1:n){
txt<-sub(pattern='톡톡톡',replacement='toktoktok',x=txt)
}
for(i in 1:(n-1)){
txt<-sub(pattern='toktoktok',replacement='톡톡톡',x=txt)
}
print(txt)
}}
change(3)
fibo<-function(f){
if(f==1){
func<-c(1)
print(func)
}else if(f==2){
func<-c(1,1)
print(func)
}else{
func<-c(1,1)
for(n in 3:f){
func[n]<-func[n-1]+func[n-2]
}
}
func1<-func[c(func<=f)]
print(func1)
}
fibo(80)
MEAN<-function(x,trim=0){
if(trim!=0){
z<-x[((trim*10)+1):(length(x)-((trim*10)))]
sum(z)/length(z)
}else{
sum(x)/length(x)
}
}
MEAN(c(1,5,7,2,9),trim=0.2)
