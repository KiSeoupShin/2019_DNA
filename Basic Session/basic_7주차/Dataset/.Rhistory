if (!require(ggplot2)) {install.packages(('ggplot2'))} ; library(ggplot2)
if (!require(MASS)) {install.packages(('MASS'))} ; library(MASS)
if (!require(scales)) {install.packages(('scales'))} ; library(scales)
ggplot(Cars93,aes(x=Type))+geom_bar()
str(Cars93)
cars93$Type
ggplot(Cars93,aes(x=Type))+geom_bar(fill='blue',colour='white')
ggplot(Cars93,aes(x=Type))+geom_bar(fill='blue',colour='white')+ggtitle('차 종류에 따른 수')
ggplot(Cars93,aes(x=Type))+geom_bar(fill='blue',colour='white')+
ggtitle('차 종류에 따른 수')+theme_bw()
ggplot(Cars93,aes(x=Price))+geom_histogram()
ggplot(Cars93,aes(x=Price))+geom_density()
ggplot(Cars93,aes(x=Price))+geom_density(fill='yellow',alpha=0.5)
ggplot(Cars93,aes(x=Price))+geom_density(fill='yellow',alpha=1)
ggplot(Cars93,aes(x=Price))+geom_density(fill='yellow',alpha=0)
ggplot(Cars93,aes(x=Price))+geom_density(fill='yellow',alpha=0.5)
ggplot(cars93,aes(x=Airbags))+ggtitle('AIRBAG의 종류에 따른 수')+geomdensity(fill='red',alpha=0.5)
if (!require(ggplot2)) {install.packages(('ggplot2'))} ; library(ggplot2)
if (!require(MASS)) {install.packages(('MASS'))} ; library(MASS)
if (!require(scales)) {install.packages(('scales'))} ; library(scales)
str(Cars93)
ggplot(cars93,aes(x=Airbags))+ggtitle('AIRBAG의 종류에 따른 수')+geomdensity(fill='red',alpha=0.5)
ggplot(Cars93,aes(x=Type))+geom_bar(fill='blue',colour='white')+ggtitle('차 종류에 따른 수')
ggplot(cars93,aes(x=AirBags))+ggtitle('AIRBAG의 종류에 따른 수')+geomdensity(fill='red',alpha=0.5)
ggplot(Cars93,aes(x=AirBags))+ggtitle('AIRBAG의 종류에 따른 수')+geomdensity(fill='red',alpha=0.5)
ggplot(Cars93,aes(x=AirBags))+ggtitle('AIRBAG의 종류에 따른 수')+geom_density(fill='red',alpha=0.5)
ggplot(Cars93,aes(x=AirBags))+ggtitle('AIRBAG의 종류에 따른 수')+geom_bar(fill='red',colour='white')
ggplot(Cars93,aes(x=AirBags))+ggtitle('AIRBAG의 종류에 따른 수')+geom_bar(fill='red',colour='white')+xlab('airbag')+ylab('수')
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway))+
geom_point(colour='blue')+ggtitle('Scatter plot:MPG.highway vs EngineSize')
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway))+
geom_point(shape=15,size=3,colour='blue')+
ggtitle('Scatter plot:MPG.highway vs EngineSize')
ggplot(Cars93,aes(x=Weight,y=MPG.highway))+
geom_point(shape=19,size=3,color='red')+
geom_smooth()+
ggtitle('추세선 포함 산점도')
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway,colour=Type))+
geom_point(shape=19,size=3)+
ggtitle('Type별 색 지정 산점도')
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway))+
geom_point(shape=19,size=3)+
facet_grid(.~Type)+
ggtitle('Type별로 나누어 산점도(세로)')
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway))+
geom_point(shape=19,size=3)+
facet_grid(Type~.)+
ggtitle('Type별로 층나누어 산점도(가로)')
unemployment = read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv")
unemployment = transform(unemployment,
year_month = paste(Year, substr(Period,2,3), "01", sep="-"))
unemployment$year_month=as.Date(unemployment$year_month)
head(unemployment)
ggplot(unemployment, aes(x=year_month, y=Value))+
geom_line()+
geom_smooth(span=0.5, color="red")+
geom_smooth(span=0.3, color="green")+
scale_x_date(date_breaks="5 years", labels =date_format("%Y"))
ggplot(Cars93,aes(x=Type,y=Price))+
geom_boxplot()+
ggtitle('Box plot by Car Type')
ggplot(Cars93,aes(x=Type,y=Price))+
geom_bar(stat='identity')+
ggtitle('Bar plot by Car Type')
ggplot(Cars93,aes(x=Type,y=Price,fill=Type))+
geom_bar(stat='identity')+
ggtitle('Bar plot by Car Type')
ggplot(Cars93,aes(x=Type,y=Price,fill=Type))+
geom_bar(stat='identity')+
ggtitle('Bar plot by Car Type')
Cars93
ggplot(Cars93,aes(x=Passengers,y=Length))+ggtitle('passenger의 종류에 따른 length')+geom_line()
ggplot(Cars93,aes(x=Passengers,y=Length))+ggtitle('passenger의 종류에 따른 length')+geom_bar()
ggplot(Cars93,aes(x=Passengers,y=Length))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
Cars93$Passengers<-as.character(Cars93$Passengers)
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
Cars93$Passengers<-as.character(Cars93$Passengers)
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
library(data.table)
library(ggplot2)
library(dplyr)
fd <- as.data.frame(fread('fine_dust.csv'))
ft <- as.data.frame(fread('fine_dust_tweet.csv'))
fd$date <- substr(fd$측정일시,1,8)
ft$date <- as.character(ft$date)
df <- left_join(fd, ft, by = 'date')
fd
ft
head(fd)
head(ft)
ggplot(fd,aes(x='측정소명',y='PM10'))+geom_bar(stat = 'identity')
ggplot(Cars93,aes(x=Type))+geom_bar(fill='blue',colour='white')+
ggtitle('차 종류에 따른 수')+theme_bw()
ggplot(Cars93,aes(x=Price))+geom_histogram()
ggplot(Cars93,aes(x=EngineSize,y=MPG.highway))+
geom_point(shape=15,size=3,colour='blue')+
ggtitle('Scatter plot:MPG.highway vs EngineSize')
ggplot(unemployment, aes(x=year_month, y=Value))+
geom_line()+
geom_smooth(span=0.5, color="red")+
geom_smooth(span=0.3, color="green")+
scale_x_date(date_breaks="5 years", labels =date_format("%Y"))
unemployment = read.csv("http://datasets.flowingdata.com/unemployment-rate-1948-2010.csv")
unemployment = transform(unemployment,
year_month = paste(Year, substr(Period,2,3), "01", sep="-"))
unemployment$year_month=as.Date(unemployment$year_month)
ggplot(unemployment, aes(x=year_month, y=Value))+
geom_line()+
geom_smooth(span=0.5, color="red")+
geom_smooth(span=0.3, color="green")+
scale_x_date(date_breaks="5 years", labels =date_format("%Y"))
if (!require(ggplot2)) {install.packages(('ggplot2'))} ; library(ggplot2)
if (!require(MASS)) {install.packages(('MASS'))} ; library(MASS)
if (!require(scales)) {install.packages(('scales'))} ; library(scales)
ggplot(unemployment, aes(x=year_month, y=Value))+
geom_line()+
geom_smooth(span=0.5, color="red")+
geom_smooth(span=0.3, color="green")+
scale_x_date(date_breaks="5 years", labels =date_format("%Y"))
ggplot(Cars93,aes(x=Type,y=Price))+
geom_boxplot()+
ggtitle('Box plot by Car Type')
Cars93$Passengers<-as.character(Cars93$Passengers)
ggplot(Cars93,aes(x=Passengers,y=Length,fill=Passengers))+ggtitle('passenger의 종류에 따른 length')+geom_bar(stat='identity')
ggplot(Cars93,aes(x=Type,y=Price,fill=Type))+
geom_bar(stat='identity')+
ggtitle('Bar plot by Car Type')
if (!require(dplyr)) {install.packages(('dplyr'))} ; library(dplyr)
if (!require(reshape2)) {install.packages(('reshape2'))} ; library(reshape2)
if (!require(tidyr)) {install.packages(('tidyr'))} ; library(tidyr)
if (!require(data.table)) {install.packages(('data.table'))} ; library(data.table)
setwd("C:/Users/rltjq/Desktop/D&A/basic_7주차/Dataset")
titanic<-fread('titanic.csv')
Mr<-grep('Mr.',titanic$Name,fixed=TRUE)
Ms<-grep('Ms.',titanic$Name,fixed=TRUE)
Mrs<-grep('Mrs.',titanic$Name,fixed=TRUE)
Miss<-grep('Miss.',titanic$Name,fixed=TRUE)
Dr<-grep('Dr.',titanic$Name,fixed=TRUE)
Rev<-grep('Rev.',titanic$Name,fixed=TRUE)
Col<-grep('Col.',titanic$Name,fixed=TRUE)
Master<-grep('Master.',titanic$Name,fixed=TRUE)
Dona<-grep('Dona.',titanic$Name,fixed=TRUE)
z<-c()
z[Mr]<-'Mr'
z[Mrs]<-'Mrs'
z[Miss]<-'Miss'
z[Dr]<-'Dr'
z[Rev]<-'Rev'
z[Col]<-'Col'
z[Master]<-'Master'
z[Dona]<-'Dona'
z[Ms]<-'Ms'
titanic %>% mutate(Title=z) %>% group_by(Title,Embarked) %>% na.omit(Age) %>% summarise(Mean=mean(Age)) %>% spread(key='Embarked',value='Mean')
titanic
titanic %>% mutate(Title=z) %>% group_by(Title,Embarked) %>% na.omit(Age) %>% summarise(Mean=mean(Age)) %>% spread(key='Embarked',value='Mean')
