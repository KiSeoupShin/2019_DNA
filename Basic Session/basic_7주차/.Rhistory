if (!require(dplyr)) {install.packages(('dplyr'))} ; library(dplyr)
if (!require(reshape2)) {install.packages(('reshape2'))} ; library(reshape2)
if (!require(tidyr)) {install.packages(('tidyr'))} ; library(tidyr)
if (!require(dplyr)) {install.packages(('dplyr'))} ; library(dplyr)
if (!require(reshape2)) {install.packages(('reshape2'))} ; library(reshape2)
if (!require(tidyr)) {install.packages(('tidyr'))} ; library(tidyr)
dat <- data.frame(name = c("ChangSik Park", "HaeHee Song","InHo Kim","YeoJin Lee"),
gender = c("M","F","M","F"),
age0 = c(74.69, 81.23, 88.24, 88.77),
age1 = c(84.99, 88.21, 92.74, 96.45),
age2 = c(91.73, 75.74, 101.85, 106.76)) ; dat
dat1 <- melt(dat, id.vars = c("name","gender"), measure.vars = c('age0','age1','age2')) ; dat1
dat2 <- melt(dat, id.vars = c("name","gender")) ; dat2
dat3 <- melt(dat, measure.vars = c('age0','age1','age2')) ; dat3
mdat2 <-melt(dat, id.vars = c('gender','name')) ; mdat2
if (!require(dplyr)) {install.packages(('dplyr'))} ; library(dplyr)
if (!require(reshape2)) {install.packages(('reshape2'))} ; library(reshape2)
if (!require(tidyr)) {install.packages(('tidyr'))} ; library(tidyr)
dat <- data.frame(name = c("ChangSik Park", "HaeHee Song","InHo Kim","YeoJin Lee"),
gender = c("M","F","M","F"),
age0 = c(74.69, 81.23, 88.24, 88.77),
age1 = c(84.99, 88.21, 92.74, 96.45),
age2 = c(91.73, 75.74, 101.85, 106.76)) ; dat
dat1 <- melt(dat, id.vars = c("name","gender"), measure.vars = c('age0','age1','age2')) ; dat1
dcast(dat1, name+gender ~ variable, value.var = 'value')
dcast(dat1, name+gender ~ variable, value.var = 'value',sum,margins = 'name')
apply(data,1,sum)
str(data)
data <- data %>% select(c(1,2,3,4))
data <- iris
data <- data %>% select(c(1,2,3,4))
data %>% head
apply(data,1,sum)
apply(data,2,sum)
# apply 에 내가 만든 함수를 적용
# Normalize = Min-Max Scaling 을 적용할 것이다.
# 정규화는 0 ~ 1 범위에 들도록 값을 조정하는 것인데
# 데이터에서 최솟값을 뺀 후 최댓값과 최솟값의 차이로 나누면 된다
min_max_scaling <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
apply(data,1,min_max_scaling)
lst <- list(c(1,2,3),c(4,5,6),c(7,8,9)) ;lst
lapply(lst,sum)
lapply(data,sum)
sapply(data,sum)
sapply(data,min_max_scaling)
if (!require(dplyr)) {install.packages(('dplyr'))} ; library(dplyr)
if (!require(reshape2)) {install.packages(('reshape2'))} ; library(reshape2)
if (!require(tidyr)) {install.packages(('tidyr'))} ; library(tidyr)
if (!require(tidyr)) {install.packages(('data.table'))} ; library(data.table)
setwd()
